<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis_mapper.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhsj.api.dao.TbOrderDao">
    <sql id="SELECT_FIELDS">
        id,order_id,plan_charge_amount,actual_charge_amount,status,discount_type,
        discount_id,pay_type,pay_method,store_no,parent_store_no,org_id,user_id,ctime,utime,org_ids,sale_id
    </sql>

    <insert id="insertOrder" >
        INSERT INTO tb_order
       (order_id,plan_charge_amount,actual_charge_amount,status,discount_type,discount_id,pay_type,pay_method,store_no,parent_store_no,org_id,user_id,ctime,utime,org_ids,sale_id)
        VALUES (#{bean.orderId},#{bean.planChargeAmount},#{bean.actualChargeAmount},#{bean.status},#{bean.discountType},
        #{bean.discountId},#{bean.payType},#{bean.payMethod},#{bean.storeNo},#{bean.parentStoreNo},#{bean.orgId},#{bean.userId},#{bean.ctime},#{bean.utime},#{bean.orgIds},#{bean.saleId})
    </insert>


    <update id="updateOrderByOrderId">
        UPDATE tb_order
        SET status = #{status},utime=unix_timestamp(now())
        where order_id = #{orderId}
    </update>

    <update id="updateOrderByOrderIdIde">
        UPDATE tb_order
        SET status = #{status},utime=unix_timestamp(now())
        where order_id = #{orderId} and status = #{preStatus}
    </update>

    <select id="getByOrderId" resultType="orderBean">
        SELECT <include refid="SELECT_FIELDS"/>
        FROM tb_order
        WHERE order_id = #{orderId}
    </select>

    <select id="getById" resultType="orderBean">
        SELECT <include refid="SELECT_FIELDS"/>
        FROM tb_order
        WHERE id = #{id}
    </select>

    <select id="getMSAliListByCtime" resultType="orderBean">
        SELECT <include refid="SELECT_FIELDS"/>
        FROM tb_order
        WHERE pay_type= 2 and pay_method = '2' and status = 0
        <if test=" id > 0">
            and id > #{id}
        </if>
        <if test=" ctime > 0">
            and ctime > #{ctime}
        </if>
        order by id
        limit #{pageSize}
    </select>


    <select id="countDealBySaleId" resultType="com.zhsj.api.bean.result.CountDealBean">
        SELECT COUNT(1) 'count',sum(actual_charge_amount) 'sum'
        FROM tb_order
        WHERE sale_id = #{saleId} and status = 1
        and ctime BETWEEN #{startTime} AND #{endTime}
    </select>

    <select id="countDealByStoreNo" resultType="com.zhsj.api.bean.result.CountDealBean">
        SELECT COUNT(1) 'count',sum(actual_charge_amount) 'sum'
        FROM tb_order
        WHERE store_no = #{storeNo} and status = 1
        and ctime BETWEEN #{startTime} AND #{endTime}
    </select>

    <select id="countDealByParentNo" resultType="com.zhsj.api.bean.result.CountDealBean">
        SELECT COUNT(1) 'count',sum(actual_charge_amount) 'sum'
        FROM tb_order
        WHERE parent_store_no = #{parentNO} and status = 1
        and ctime BETWEEN #{startTime} AND #{endTime}
    </select>

    <select id="getByParam" resultType="orderBean">
        SELECT <include refid="SELECT_FIELDS"/>
        FROM tb_order
        where 1=1
        <if test="storeNo != '' ">
            AND store_no = #{storeNo}
        </if>
        <if test="parentNo != '' ">
            AND parent_store_no = #{parentNo}
        </if>
        and ctime BETWEEN #{startTime} and #{endTime}
        <if test="payMethod != 0 ">
            AND pay_method = #{payMethod}
        </if>
        <choose>
            <when test="status != null and status.size() > 0">
                AND status IN
                <foreach collection="status" item="st"
                         open="(" separator="," close=")" >
                    #{st}
                </foreach>
            </when>
        </choose>
        ORDER by id DESC
        limit #{startNo},#{pageSize}
    </select>

    <select id="countByParam" resultType="com.zhsj.api.bean.result.CountDealBean">
        SELECT count(1) "count",sum(actual_charge_amount) "sum"
        FROM tb_order
        where 1=1
        <if test="storeNo != '' ">
            AND store_no = #{storeNo}
        </if>
        <if test="parentNo != '' ">
            AND parent_store_no = #{parentNo}
        </if>
        and ctime BETWEEN #{startTime} and #{endTime}
        <if test="payMethod != 0 ">
            AND pay_method = #{payMethod}
        </if>
        <choose>
            <when test="status != null and status.size() > 0">
                AND status IN
                <foreach collection="status" item="st"
                         open="(" separator="," close=")" >
                    #{st}
                </foreach>
            </when>
        </choose>
    </select>

</mapper>