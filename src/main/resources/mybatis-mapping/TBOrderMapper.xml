<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis_mapper.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhsj.api.dao.TBOrderDao">
    <sql id="SELECT_FIELDS">
        id,order_id,plan_charge_amount,actual_charge_amount,status,discount_type,
        discount_id,pay_type,pay_method,store_no,parent_store_no,org_id,user_id,ctime,utime,org_ids,sale_id,
        refund_no,refund_money,pay_channel,account_id,transaction_id,mchnt_order_no
    </sql>

     <insert id="insertOrder" >
        INSERT INTO tb_order
       (order_id,plan_charge_amount,actual_charge_amount,status,pay_type,pay_method,store_no,parent_store_no,org_id,
       		user_id,ctime,utime,org_ids,sale_id,store_discount_price,org_discount_price,discount_detail,pay_channel,account_id)
        VALUES 
        (#{bean.orderId},#{bean.planChargeAmount},#{bean.actualChargeAmount},#{bean.status},
        #{bean.payType},#{bean.payMethod},#{bean.storeNo},#{bean.parentStoreNo},#{bean.orgId},
        #{bean.userId},unix_timestamp(now()),unix_timestamp(now()),#{bean.orgIds},#{bean.saleId},#{bean.storeDiscountPrice},
        #{bean.orgDiscountPrice},#{bean.discountDetail},#{bean.payChannel},#{bean.accountId})
    </insert>
    


    <update id="updateOrderByOrderId">
        UPDATE tb_order
        SET status = #{status},utime=unix_timestamp(now())
        where order_id = #{orderId}
    </update>

    <update id="updateOrderByOrderIdIde">
        UPDATE tb_order
        SET status = #{status},utime=unix_timestamp(now())
        where order_id = #{orderId} and status = #{preStatus}
    </update>

    <select id="getByOrderId" resultType="orderBean">
        SELECT <include refid="SELECT_FIELDS"/>
        FROM tb_order
        WHERE order_id = #{orderId}
    </select>
    
     <select id="getByTransactionId" resultType="orderBean">
        SELECT <include refid="SELECT_FIELDS"/>
        FROM tb_order
        WHERE transaction_id = #{transactionId} order by id desc limit 1
    </select>
    
    <select id="getByTransactionIdAndStoreNo" resultType="orderBean">
        SELECT <include refid="SELECT_FIELDS"/>
        FROM tb_order
        WHERE transaction_id = #{transactionId} and store_no = #{storeNo}
    </select>

    <select id="getById" resultType="orderBean">
        SELECT <include refid="SELECT_FIELDS"/>
        FROM tb_order
        WHERE id = #{id}
    </select>

    <select id="getMSAliListByCtime" resultType="orderBean">
        SELECT <include refid="SELECT_FIELDS"/>
        FROM tb_order
        WHERE pay_type= 2 and pay_method = '2' and status = 0
        <if test=" id > 0">
            and id >= #{id}
        </if>
        <if test=" ctime > 0">
            and ctime > #{ctime}
        </if>
        order by id
        limit #{pageSize}
    </select>


    <select id="countDealBySaleId" resultType="com.zhsj.api.bean.result.CountDealBean">
        SELECT COUNT(1) 'count',sum(actual_charge_amount) 'sum'
        FROM tb_order
        WHERE sale_id = #{saleId} and status = 1
        and ctime BETWEEN #{startTime} AND #{endTime}
    </select>

    <select id="countDealByStoreNo" resultType="com.zhsj.api.bean.result.CountDealBean">
        SELECT COUNT(1) 'count',sum(actual_charge_amount) 'sum'
        FROM tb_order
        WHERE store_no = #{storeNo} and status = 1
        and ctime BETWEEN #{startTime} AND #{endTime}
    </select>

    <select id="countDealByParentNo" resultType="com.zhsj.api.bean.result.CountDealBean">
        SELECT COUNT(1) 'count',sum(actual_charge_amount) 'sum'
        FROM tb_order
        WHERE parent_store_no = #{parentNO} and status = 1
        and ctime BETWEEN #{startTime} AND #{endTime}
    </select>

    <select id="getByParam" resultType="orderBean">
        SELECT <include refid="SELECT_FIELDS"/>
        FROM tb_order
        where 1=1
        <if test="storeNo != '' ">
            AND store_no = #{storeNo}
        </if>
        <if test="parentNo != '' ">
            AND parent_store_no = #{parentNo}
        </if>
        and ctime BETWEEN #{startTime} and #{endTime}
        <if test="payMethod != 0 ">
            AND pay_method = #{payMethod}
        </if>
        <choose>
            <when test="status != null and status.size() > 0">
                AND status IN
                <foreach collection="status" item="st"
                         open="(" separator="," close=")" >
                    #{st}
                </foreach>
            </when>
        </choose>
        ORDER by id DESC
        limit #{startNo},#{pageSize}
    </select>

    <select id="countByParam" resultType="com.zhsj.api.bean.result.CountDealBean">
        SELECT count(1) "count",sum(actual_charge_amount) "sum"
        FROM tb_order
        where 1=1
        <if test="storeNo != '' ">
            AND store_no = #{storeNo}
        </if>
        <if test="parentNo != '' ">
            AND parent_store_no = #{parentNo}
        </if>
        and ctime BETWEEN #{startTime} and #{endTime}
        <if test="payMethod != 0 ">
            AND pay_method = #{payMethod}
        </if>
        <choose>
            <when test="status != null and status.size() > 0">
                AND status IN
                <foreach collection="status" item="st"
                         open="(" separator="," close=")" >
                    #{st}
                </foreach>
            </when>
        </choose>
    </select>

    <select id="countDiscount" resultType="countDiscount">
        select sum(plan_charge_amount) plan_charge_amount ,sum(actual_charge_amount) actual_charge_amount
        from tb_order
        where discount_id = #{discountId} and status = 1
    </select>

    <select id="countDiscountUser" resultType="java.lang.Integer">
        select count(1) from (select DISTINCT(user_id)
        from tb_order
        where discount_id = #{discountId} and `status` = 1) a
    </select>

    <select id="countDiscountOrder" resultType="countDiscount">
         select sum(plan_charge_amount) plan_charge_amount ,sum(actual_charge_amount) actual_charge_amount,
         count(1) total
        from tb_order
        where discount_id = #{discountId} and status = 1
        AND ctime BETWEEN #{startTime} and #{endTime}
    </select>

    <select id="getDiscountOrder" resultType="orderBean">
        SELECT <include refid="SELECT_FIELDS"/>
        FROM tb_order
        where discount_id = #{discountId} and status = 1
        AND ctime BETWEEN #{startTime} and #{endTime}
        limit #{startNo},#{pageSize}
    </select>

    <!-- xlc 170306 -->
    
    <select id="getCountByMoney" resultType="java.lang.Integer">
      select count(distinct(user_id)) from tb_order
      <where>
         store_no = #{storeNo} and user_id > 0
         <if test="actualChargeAmount1 != null">
            and actual_charge_amount >= #{actualChargeAmount1}
         </if>
         <if test="actualChargeAmount2 != null">
            and actual_charge_amount &lt; #{actualChargeAmount2}
         </if>
      </where>
    </select>
    
    <select id="getCountByTime" resultType="java.lang.Integer">
       select count(1) from (
          select count(1) from tb_order where  store_no = #{storeNo} and user_id > 0
          GROUP BY user_id having  
          <if test="time ==1">
             count(user_id) = 1
          </if>
          <if test="time == 2">
            (count(user_id) >= 2 and count(user_id) &lt;= 4)
          </if>
          <if test="time == 3">
            (count(user_id) >= 5 and count(user_id) &lt;= 8)
          </if>
          <if test="time == 4">
            count(user_id) >= 9
          </if>
          ) a
    </select>
        
        
     <select id="getByStoreNoAndUserId" resultType="com.zhsj.api.bean.result.CountMember">
       select count(1) count from tb_order
       <where>
            store_no = #{storeNo} and user_id = #{userId} 
       </where>
     </select>   
     
     <select id="getSumMoneyByStoreNoAndUserId" resultType="Double">
       select IFNULL(SUM(actual_charge_amount),0) sum from tb_order
       <where>
            store_no = #{storeNo} and user_id = #{userId} and status in (1,3,5)
       </where>
     </select>
     
     <select id="getByStoreNoAndMoney" resultType="com.zhsj.api.bean.result.CountMember">
        select distinct(user_id) userId from tb_order
        <where>
	        store_no = #{storeNo}
	         <if test="actualChargeAmount1 != null">
	            and actual_charge_amount >= #{actualChargeAmount1}
	         </if>
	         <if test="actualChargeAmount2 != null">
	            and actual_charge_amount &lt; #{actualChargeAmount2}
	         </if>
        </where>
     </select>
     
     <select id="getByStoreNoAndTime" resultType="com.zhsj.api.bean.result.CountMember">
        select distinct(user_id) userId from tb_order where  store_no = #{storeNo}
          GROUP BY user_id having  
          <if test="time ==1">
             count(user_id) = 1
          </if>
          <if test="time == 2">
            (count(user_id) >= 2 and count(user_id) &lt;= 4)
          </if>
          <if test="time == 3">
            (count(user_id) >= 5 and count(user_id) &lt;= 8)
          </if>
          <if test="time == 4">
            count(user_id) >= 9
          </if>
     </select>
     
      <select id="countOrgDiscountPrice" resultType="java.lang.Integer">
     	SELECT count(org_discount_price) FROM tb_order 
     	WHERE store_No = #{storeNo} 
     	and ctime BETWEEN #{startTime} AND #{endTime} and status=1 and org_discount_price > 0
     </select>
     
     <select id="getOrgDiscountPrice" resultType="java.lang.Double">
     	SELECT SUM(org_discount_price) FROM tb_order 
     	WHERE store_No = #{storeNo} 
     	and ctime BETWEEN #{startTime} AND #{endTime} and status=1
     </select>
     
     <select id="countByUserAndTime" resultType="java.util.HashMap">
     	SELECT IFNULL(SUM(plan_charge_amount),0) planMoney,IFNULL(SUM(actual_charge_amount),0) actualMoney,
     			count(1) count
		FROM tb_order 
		where store_No = #{storeNo} 
     	and ctime BETWEEN #{startTime} AND #{endTime} and ( account_id = #{accountId} or account_id = 0 )
     	<choose>
            <when test="statuses != null and statuses.size() > 0">
                AND status IN
                <foreach collection="statuses" item="st"
                         open="(" separator="," close=")" >
                    #{st}
                </foreach>
            </when>
        </choose>
     </select>
     
     <select id="countStoreDisByUserAndTime" resultType="java.util.HashMap">
     	SELECT IFNULL(SUM(store_discount_price),0) storeDisSum,count(1) count
		FROM tb_order 
		where store_No = #{storeNo} 
     	and ctime BETWEEN #{startTime} AND #{endTime} and ( account_id = #{accountId} or account_id = 0)
     	and store_discount_price > 0
     	<choose>
            <when test="statuses != null and statuses.size() > 0">
                AND status IN
                <foreach collection="statuses" item="st"
                         open="(" separator="," close=")" >
                    #{st}
                </foreach>
            </when>
        </choose>
     </select>
     
     <select id="countOrgDisByUserAndTime" resultType="java.util.HashMap">
     	SELECT IFNULL(SUM(org_discount_price),0) orgDisSum,count(1) count
		FROM tb_order 
		where store_No = #{storeNo} 
     	and ctime BETWEEN #{startTime} AND #{endTime} and ( account_id = #{accountId} or account_id = 0 )
     	and org_discount_price > 0
     	<choose>
            <when test="statuses != null and statuses.size() > 0">
                AND status IN
                <foreach collection="statuses" item="st"
                         open="(" separator="," close=")" >
                    #{st}
                </foreach>
            </when>
        </choose>
     </select>
     
     <select id="countRefundByUserAndTime" resultType="java.util.HashMap">
     	SELECT IFNULL(SUM(refund_money),0) refundMoney,count(1) count
		FROM tb_order 
		where store_No = #{storeNo} 
     	and ctime BETWEEN #{startTime} AND #{endTime} and ( account_id = #{accountId} or account_id = 0 )
     	and status = 4
     </select>
     
     <select id="countByUserTimeMethod" resultType="java.util.HashMap">
     	SELECT SUM(plan_charge_amount) planMoney,SUM(actual_charge_amount) actualMoney,
		       SUM(store_discount_price) storeDisMoney,
		       SUM(org_discount_price) orgDisMoney,
		       SUM(IF(STATUS = 4,refund_money,0)) refundMoney
		FROM tb_order 
		where store_No = #{storeNo} 
     	and ctime BETWEEN #{startTime} AND #{endTime} and ( account_id = #{accountId} or account_id = 0 )
     	<choose>
            <when test="statuses != null and statuses.size() > 0">
                AND status IN
                <foreach collection="statuses" item="st"
                         open="(" separator="," close=")" >
                    #{st} 
                </foreach>
            </when>
        </choose> 
        and pay_method = #{payMethod}
     </select>

     <select id="getByStatusAndCtime" resultType="orderBean">
     	SELECT <include refid="SELECT_FIELDS"/>
        FROM tb_order
        WHERE status = #{status} and ctime between #{startTime} and #{endTime}
     </select>
        
     <select id="countStore" resultType="storeCountResult">
     	SELECT IFNULL(SUM(plan_charge_amount),0),IFNULL(SUM(actual_charge_amount),0),COUNT(1) 
     	FROM tb_order 
		WHERE ctime BETWEEN #{startTime} AND #{endTime} and status in (1,3) 
		<if test="storeNo != null and storeNo != '' ">
            store_No = #{storeNo} 
        </if>
        <if test="parentStoreNo != null and parentStoreNo != '' ">
            parent_store_no = #{parentStoreNo} 
        </if>
     </select>
     
      <select id="countStoreRefund" resultType="java.lang.Integer">
     	SELECT COUNT(1) 
     	FROM tb_order 
		WHERE ctime BETWEEN #{startTime} AND #{endTime} and status = 3 
		<if test="storeNo != null and storeNo != '' ">
            store_No = #{storeNo} 
        </if>
        <if test="parentStoreNo != null and parentStoreNo != '' ">
            parent_store_no = #{parentStoreNo} 
        </if>
     </select>
     
     
     <select id="getListByParamMap" resultType="orderBean">
        SELECT 
        id,order_id orderId,plan_charge_amount planChargeAmount,actual_charge_amount actualChargeAmount,status,pay_type payType,pay_method payMethod,store_no storeNo, ctime,
        store_discount_price storeDiscountPrice,org_discount_price orgDiscountPrice,refund_money refundMoney
        FROM tb_order
        <where>
            ctime between #{startTime} and #{endTime}
            <if test="isAll == 0">
               and store_no = #{storeNo} 
            </if>
            <if test="isAll == 1">
               and (store_no = #{storeNo} or parent_store_no = #{storeNo})
            </if>
            <if test="status != -1">
               and status = #{status}
            </if>
            <if test="status == -1">
               and status in (1,3,4,5)
            </if>
            <if test="payMethod != -1">
               and pay_method = #{payMethod}
            </if>
            <if test="payChannel != -1">
               and pay_channel = #{payChannel}
            </if>
            order by ctime desc limit #{start},#{pageSize}
        </where>
     </select>
     
     <select id="getCountByParamMap" resultType="Integer">
          select count(1) from tb_order
          <where>
            ctime between #{startTime} and #{endTime}
            <if test="isAll == 0">
               and store_no = #{storeNo} 
            </if>
            <if test="isAll == 1">
               and (store_no = #{storeNo} or parent_store_no = #{storeNo})
            </if>
            <if test="status != -1">
               and status = #{status}
            </if>
            <if test="status == -1">
               and status in (1,3,4,5)
            </if>
            <if test="payMethod != -1">
               and pay_method = #{payMethod}
            </if>
            <if test="payChannel != -1">
               and pay_channel = #{payChannel}
            </if>
        </where>
     </select>
     
     <select id="getOrderStaByParamMap" resultType="com.zhsj.api.bean.result.OrderSta">
         select count(1) as count, ifnull(sum(plan_charge_amount), 0) pm, ifnull(sum(actual_charge_amount), 0) am from tb_order
         <where>
            ctime between #{startTime} and #{endTime}
            <if test="isAll == 0">
               and store_no = #{storeNo} 
            </if>
            <if test="isAll == 1">
               and (store_no = #{storeNo} or parent_store_no = #{storeNo})
            </if>
            <if test="status != -1">
               and status = #{status}
            </if>
            <if test="status == -1">
               and status in (1,3,4,5)
            </if>
            <if test="payMethod != -1">
               and pay_method = #{payMethod}
            </if>
            <if test="payChannel != -1">
               and pay_channel = #{payChannel}
            </if>
        </where>
     </select>
     
     
     <select id="getRefundStaByParamMap" resultType="com.zhsj.api.bean.result.RefundSta">
         select count(1) as refundCount, ifnull(sum(refund_money), 0) refundMoney from tb_order
         <where>
            ctime between #{startTime} and #{endTime}
            <if test="isAll == 0">
               and store_no = #{storeNo} 
            </if>
            <if test="isAll == 1">
               and (store_no = #{storeNo} or parent_store_no = #{storeNo})
            </if>
            <if test="status > -1 and status != 4">
               and status = -1
           </if>
           <if test="status == -1 or status == 4">
               and status = 4
           </if>
            <if test="payMethod != -1">
               and pay_method = #{payMethod}
            </if>
            <if test="payChannel != -1">
               and pay_channel = #{payChannel}
            </if>
        </where>
     </select>
     
     <select id="getByOrderIdOrTransId" resultType="orderBean">
          select  id,order_id orderId,plan_charge_amount planChargeAmount,actual_charge_amount actualChargeAmount,status,pay_type payType,pay_method payMethod,ctime
          	,transaction_id
          from tb_order
          <where>
                 status in (1,3,4,5)
	             and store_no in <foreach collection="storeNos" item="storeNo" open="(" separator="," close=")">
	                  #{storeNo}
	             </foreach>
	             <if test="orderId != '' and orderId != null">
	               and order_id = #{orderId}
	             </if>
	             <if test="transId != '' and transId != null">
	               and transaction_id = #{transId}
	             </if>
          </where>
     </select>
     
      <select id="getByTypeOrderIdOrTransId" resultType="orderBean">
          select  id,order_id orderId,plan_charge_amount planChargeAmount,actual_charge_amount actualChargeAmount,status,pay_type payType,pay_method payMethod,ctime
          	,transaction_id
          from tb_order
          <where>
             store_no = #{storeNo} and status in (1,3,4,5) and pay_type=#{payType}
             <if test="orderId != '' and orderId != null">
               and order_id = #{orderId}
             </if>
             <if test="transId != '' and transId != null">
               and transaction_id = #{transId}
             </if>
          </where>
     </select>
     
     <update id="updateOrderRefundById">
        update tb_order
        set status = #{status},
        refund_no = #{refundNo},
        refund_money = #{refundMoney},
        utime = unix_timestamp(now())
        <where>
          id = #{id}
        </where>
     </update>
     
     
     <update id="updateStatusById">
        update tb_order
        set status = #{status},
        utime = unix_timestamp(now())
        where id = #{id}
     </update>
     
     <select id="getTodayOrderSta" resultType="com.zhsj.api.bean.result.OrderSta">
        select count(1) count, ifnull(sum(plan_charge_amount),0) pm, ifnull(sum(actual_charge_amount), 0) am, 
           ifnull(sum(store_discount_price), 0) storeDiscount, ifnull(sum(org_discount_price), 0) orgDiscount
           from tb_order
           <where>
              ctime between #{startTime} and #{endTime} 
              and (store_no = #{storeNo} or parent_store_no = #{storeNo})
              and status in (1,3,4,5)
           </where>
     
     </select>
     
     
     <select id="getTodayRefundSta" resultType="com.zhsj.api.bean.result.RefundSta">
        select count(1) refundCount, ifnull(sum(refund_money), 0) refundMoney
        from tb_order
        <where>
	        ctime between #{startTime} and #{endTime} 
	        and (store_no = #{storeNo} or parent_store_no = #{storeNo})
	        and status = 4
        </where>
     </select>
     
     <select id="getByTodayStoreSta" resultType="com.zhsj.api.bean.result.StoreSta">
        select count(1) transCount, ifnull(sum(actual_charge_amount), 0) transSumMoney from tb_order
        <where>
            ctime between #{startTime} and #{endTime} 
            and store_no = #{storeNo}
            and status in (1,3,4,5)
        </where>
     </select>
     
     <select id="getTodayRefundMoney" resultType="Double">
        select ifnull(sum(refund_money), 0) from tb_order
        <where>
            ctime between #{startTime} and #{endTime} 
	        and store_no = #{storeNo} 
	        and status = 4
        </where>
     
     </select>
     <update id="updateStatusAndMoney">
        update tb_order
        set status = #{status},refund_money=#{refundMoney},refund_no=#{refundNo},
        utime = unix_timestamp(now()),service_charge=#{serviceCharge}
        where id = #{id}
     </update>
     
     
     <update id="updateByAccount">
        update tb_order
        set status = #{status},transaction_id=#{transactionId},
        utime = unix_timestamp(now())
        where status = #{preStatus} and order_id = #{orderId} and account_id = #{accountId}
     </update>
     
      <update id="updateFYUP">
        update tb_order
        set utime = unix_timestamp(now()),card_type = #{cardType},service_charge=#{serviceCharge},
        rate=#{rate},fuyou_order_no = #{fuyouOrderNo}
        where status = #{status} and transaction_id=#{transactionId} 
     </update>
     
      <update id="updateStatus">
        update tb_order
        set status = #{status},transaction_id=#{transactionId},user_id=#{userId},
        utime = unix_timestamp(now())
        where status = #{preStatus} and id = #{id} 
     </update>
      <update id="updateUser">
        update tb_order
        set transaction_id=#{transactionId},user_id=#{userId},
        utime = unix_timestamp(now())
        where id = #{id} 
     </update>
	
	 <select id="getAmSum" resultType="Map">
	    select ifnull(sum(actual_charge_amount), 0) amsum from tb_order
        where ctime &gt;= #{startTime} and ctime &lt;= #{endTime} 
        and pay_type = #{payType} and pay_method = #{payMethod} 
        and status in <foreach collection="statusList" item="status" open="(" close=")" separator=",">
            #{status}
        </foreach>
        and store_no in <foreach collection="storeNos" item="storeNo" open="(" close=")" separator=",">
            #{storeNo}
        </foreach>
	 </select>
	 
	 <select id="getBy3Id" resultType="orderBean">
	 	select <include refid="SELECT_FIELDS"/>
	 	from tb_order
	 	where store_no = #{storeNo} and pay_method = #{orderType}
	 	<if test=" mchnt_order_no != null and mchnt_order_no != '' ">
            and mchnt_order_no = #{mchnt_order_no}
        </if>
        <if test=" transaction_id != null and transaction_id != '' ">
            and transaction_id = #{transaction_id}
        </if>
        <if test=" wwt_order_no != null and wwt_order_no != '' ">
            and order_id = #{wwt_order_no}
        </if>
	 </select>
	 
<!-- 	 <select id="getRefundSum" resultType="Map"> -->
<!-- 	   select ifnull(sum(refund_money), 0) refundsum from tb_order -->
<!--         where ctime &gt;= #{startTime} and ctime &lt;= #{endTime}  -->
<!--         and pay_type = #{payType} and pay_method = #{payMethod} and status = 4 -->
<!--         and store_no in <foreach collection="storeNos" item="storeNo" open="(" close=")" separator=","> -->
<!--           #{storeNo} -->
<!--         </foreach> -->
<!-- 	 </select> -->
	
</mapper>